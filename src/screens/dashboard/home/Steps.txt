

Defining native-module:
1. Android
a. Create a Package class in android/app/src/main/java(name eg :CustomPackage)
b. Create module file in the same above dir. and call this module in package class.(name eg: CustomModule)
c. Add the package in mainApplication file.
d. Remember, the methods in module class has the correct name because, only with this name you can access the android native module .
e. Rebuild the application

2. IOS
a.  Open the Project in X-code.
b. Create a file swift file in your project directory, it will ask you to add a bridging file ,add this. If it is not created automactically the try this https://itecnote.com/tecnote/ios-xcode-not-automatically-creating-bridging-header/
c. Create 2 file Objective-c h and m files for Bridging.
d. Copy paste the file content from online source(like https://gaitatzis.medium.com/react-native-native-modules-in-ios-swift-97eb9073f5a2) and Define methods in m file.
e. Rebuild the application

Created a native module named CustomModule for both android and IOS, import the native module like this:
const { CustomModule } = NativeModules

Call:
simpleMethod is native(For Both android and IOS)
For calling simpleMethod from react-native:
CustomModule.simpleMethod()